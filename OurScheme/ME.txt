Welcome to OurScheme!

> x1 defined

> x2 defined

> x3 defined

> SumUp defined

> call function : SumUp

CALLFUNCTION------------------------------------------------------------------------
======= LOCAL =======
start: 5
end: 10

======= GLOBAL =======
x1: 13 , par_name: , FuncType : 2
x2: 12 , par_name: , FuncType : 2
x3: 5 , par_name: , FuncType : 2
SumUp: ( cond ( ( = start end ) start ) ( ( > start end ) "Illegal input! the first argument must be smaller or equal to the second." ) ( else ( let ( ( new-start ( + start 1 ) ) ( x1 ( + x1 x2 ) ) ( x3 ( + x3 5 ) ) ) ( - x1 x3 ) ( + start ( SumUp new-start end ) ) ) ) ) , par_name: start end , FuncType : 0

================

LETLOCAL------------------------------------------------------------------------
======= LOCAL =======
new-start: 6
x1: 25
x3: 10

======= GLOBAL =======
x1: 13 , par_name: , FuncType : 2
x2: 12 , par_name: , FuncType : 2
x3: 5 , par_name: , FuncType : 2
SumUp: ( cond ( ( = start end ) start ) ( ( > start end ) "Illegal input! the first argument must be smaller or equal to the second." ) ( else ( let ( ( new-start ( + start 1 ) ) ( x1 ( + x1 x2 ) ) ( x3 ( + x3 5 ) ) ) ( - x1 x3 ) ( + start ( SumUp new-start end ) ) ) ) ) , par_name: start end , FuncType : 0

================
call function : SumUp

CALLFUNCTION------------------------------------------------------------------------
======= LOCAL =======
new-start: 6
x1: 25
x3: 10
start: new-start
end: 10

======= GLOBAL =======
x1: 13 , par_name: , FuncType : 2
x2: 12 , par_name: , FuncType : 2
x3: 5 , par_name: , FuncType : 2
SumUp: ( cond ( ( = start end ) start ) ( ( > start end ) "Illegal input! the first argument must be smaller or equal to the second." ) ( else ( let ( ( new-start ( + start 1 ) ) ( x1 ( + x1 x2 ) ) ( x3 ( + x3 5 ) ) ) ( - x1 x3 ) ( + start ( SumUp new-start end ) ) ) ) ) , par_name: start end , FuncType : 0

================
ERROR (unbound symbol) : new-start

> ERROR (no more input) : END-OF-FILE encountered
Thanks for using OurScheme!